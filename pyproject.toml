[tool.tox]
legacy_tox_ini = """
    [tox]
    min_version = 4.0
    env_list = py312
    skipsdist = true
    basepython = python3.12

    [testenv]
    deps = -rrequirements/dev.txt
    allowlist_externals = make
    commands = make check
"""

[project]
name = "CH4NGE"
version = "0.1.0"
dependencies = [
    "SQLAlchemy[asyncio,mypy]>=2.0.27",
    "aioredis>=2.0.1",
    "aiosqlite>=0.20.0",
    "alembic>=1.13.1",
    "fastapi>=0.110.0",
    "gunicorn>=21.2.0",
    "loguru>=0.7.2",
    "passlib[bcrypt]>=1.7.4",
    "pydantic-settings>=2.2.1",
    "pydantic[email]>=2.6.2",
    "python-jose[cryptography]>=3.3.0",
    "uvicorn[standard]>=0.27.1",
    "websockets>=12.0",
    "psutil>=5.9.8",
    "python-multipart>=0.0.9",
    "flaml[automl]>=2.1.2",
    "pandas>=2.2.1",
    "numpy>=1.23.2,<2.0",
    "scikit-learn>=1.4.1.post1",
    "catboost>=1.2.3",
    "ydata-profiling[unicode]>=4.6.5",
    "flower>=2.0.1",
    "celery>=5.3.6",
    "redis>=5.0.3"
]


[project.optional-dependencies]
dev = [
    "black>=24.2.0",
    "httpx>=0.27.0",
    "isort>=5.13.2",
    "mypy>=1.8.0",
    "polyfactory>=2.14.1",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "pytest-env>=1.1.3",
    "pytest-lazy-fixtures>=1.0.5",
    "pytest-mock>=3.12.0",
    "pytest>=8.0.2",
    "ruff>=0.2.2",
    "tox>=4.13.0",
    "types-passlib>=1.7.7.20240106",
    "types-python-jose>=3.3.4.20240106",
]


[tool.pip-tools]
generate_hashes = true


[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
lint.select = ["E", "F"]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".mypy_cache",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "__pycache_",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
    "migrations",
]


# Same as Black.
line-length = 79

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.12.
target-version = "py312"


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.black]
target-version = ['py312']
line-length = 79
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | venv
    | _build
    | buck-out
    | build
    | dist
    | .tox
  )/
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 79
skip = 'venv,.tox'
src_paths = ["."]

[tool.pytest.ini_options]
addopts = '-s -vvv --cache-clear'
asyncio_mode = 'auto'
cache_dir = '/tmp'
python_files = 'tests.py test_*.py *_test.py'
python_functions = 'test_* *_test'
filterwarnings = ['ignore::RuntimeWarning', 'ignore::UserWarning']

[tool.coverage.run]
omit = [
    "*/conftest.py",
    "*/test_*.py",
    "*/migrations/",
    "*/venv/",
    "*/.tox/",
]

[tool.mypy]
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin"
]
python_version = '3.12'
files = ['*.py',]
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
exclude = ["venv", ".tox"]

# Silint "type import errors" as our 3rd-party libs does not have types
# Check: https://mypy.readthedocs.io/en/latest/config_file.html#import-discovery
follow_imports = 'silent'

[[tool.mypy.overrides]]
module = [
    "websockets.exceptions",
]
ignore_missing_imports = true


[tool.pyright]
exclude = ["**/__pycache__", "**/venv/*", "**/.tox/*"]
typeCheckingMode = "off"  # off, basic, strict
useLibraryCodeForTypes = true
